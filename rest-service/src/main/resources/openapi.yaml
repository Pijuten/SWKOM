openapi: 3.0.3
info:
  description: OpenAPI specification for the two Java models.
  title: Example API
  version: 1.0.0
servers:
- url: /
paths:
  /document:
    delete:
      parameters:
      - description: ID of the Model1 object to delete
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "204":
          description: Model1 object deleted successfully
      summary: Delete a Model1 object
      x-accepts:
      - application/json
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Document'
                type: array
          description: List of Model1 objects
      summary: Get all Model1 objects
      x-accepts:
      - application/json
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Model1 object created successfully
      summary: Create a new Model1 object
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
    put:
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Model1 object updated successfully
      summary: Update an existing Model1 object
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /document/{id}:
    get:
      parameters:
      - description: ID of the Model1 object to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Model1 object retrieved successfully
        "404":
          description: Model1 object not found
      summary: Get a specific Model1 object by ID
      x-accepts:
      - application/json
  /documentcontent:
    delete:
      parameters:
      - description: ID of the Model2 object to delete
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "204":
          description: Model2 object deleted successfully
      summary: Delete a Model2 object
      x-accepts:
      - application/json
    get:
      parameters:
      - description: Search query to filter Model2 objects
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentContent'
                type: array
          description: List of Model2 objects
      summary: Get all Model2 objects or search by a query string
      x-accepts:
      - application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentContent'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentContent'
          description: Model2 object created successfully
      summary: Create a new Model2 object
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentContent'
          description: Model2 object updated successfully
      summary: Update an existing Model2 object
      x-content-type: application/json
      x-accepts:
      - application/json
  /documentcontent/{id}:
    get:
      parameters:
      - description: ID of the Model2 object to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentContent'
          description: Model2 object retrieved successfully
        "404":
          description: Model2 object not found
      summary: Get a specific Model2 object by ID
      x-accepts:
      - application/json
components:
  schemas:
    Document:
      example:
        file: ""
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        username: username
      properties:
        id:
          format: uuid
          type: string
        title:
          type: string
        username:
          type: string
        description:
          type: string
        file:
          format: binary
          type: string
      required:
      - description
      - file
      - title
      - username
      type: object
    DocumentContent:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        content: content
      properties:
        id:
          format: uuid
          type: string
        content:
          type: string
      required:
      - content
      - id
      type: object
